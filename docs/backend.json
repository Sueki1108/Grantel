{
  "entities": {
    "SheetData": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SheetData",
      "type": "object",
      "description": "Represents the data from the uploaded spreadsheet.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the SheetData entity."
        },
        "data": {
          "type": "array",
          "description": "Array of arrays representing the spreadsheet data. Each inner array is a row.",
          "items": {
            "type": "string"
          }
        },
        "fileName": {
          "type": "string",
          "description": "The name of the file that this sheet data was extracted from."
        },
        "uploadDate": {
          "type": "string",
          "description": "The date and time when the spreadsheet data was uploaded.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "data",
        "fileName",
        "uploadDate"
      ]
    },
    "CheckedRow": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CheckedRow",
      "type": "object",
      "description": "Represents the checked state of a row in the spreadsheet.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the CheckedRow entity."
        },
        "sheetDataId": {
          "type": "string",
          "description": "Reference to SheetData. (Relationship: SheetData 1:N CheckedRow)"
        },
        "rowIndex": {
          "type": "number",
          "description": "The index of the row in the spreadsheet."
        },
        "isChecked": {
          "type": "boolean",
          "description": "Indicates whether the row is checked or not."
        },
        "lastUpdated": {
          "type": "string",
          "description": "The date and time when the checked state was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "sheetDataId",
        "rowIndex",
        "isChecked",
        "lastUpdated"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/sheetData",
        "definition": {
          "entityName": "SheetData",
          "schema": {
            "$ref": "#/backend/entities/SheetData"
          },
          "description": "Stores the uploaded spreadsheet data. Accessible to all users.",
          "params": []
        }
      },
      {
        "path": "/checkedRows",
        "definition": {
          "entityName": "CheckedRow",
          "schema": {
            "$ref": "#/backend/entities/CheckedRow"
          },
          "description": "Stores the checked state of rows in the spreadsheet. Accessible to all users.",
          "params": []
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to manage spreadsheet data and user interactions efficiently. It consists of a single collection `sheetData` storing the spreadsheet data and a second `checkedRows` collection, to manage the checked state of rows. The admin password is not stored in Firestore.\n\nThis design ensures Authorization Independence because the sheet data is globally accessible and row checkmarks can be written by any user. Thus, no authorization fields need to be denormalized.\n\nThis structure supports the required QAPs by:\n\n1.  **Enabling secure `list` operations:** Since access to the data is public, there are no restrictions on listing or filtering data.\n\n2.  **Maintaining invariants:** The row checkmarks are indexed by row index and can be easily updated."
  }
}